{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Ahmad%20Alhraki/Desktop/moonflex/src/app/login/page.tsx"],"sourcesContent":["\"use client\";\r\nimport { useState, FormEvent } from \"react\";\r\nimport Head from \"next/head\";\r\nimport Link from \"next/link\";\r\nimport { NextPage } from \"next\";\r\n\r\ntype AuthMode = \"login\" | \"signup\";\r\n\r\nconst AuthPage: NextPage = () => {\r\n  const [mode, setMode] = useState<AuthMode>(\"login\");\r\n  const [email, setEmail] = useState<string>(\"\");\r\n  const [password, setPassword] = useState<string>(\"\");\r\n  const [name, setName] = useState<string>(\"\");\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [isLoading, setIsLoading] = useState<boolean>(false);\r\n\r\n  const handleSubmit = async (e: FormEvent) => {\r\n    e.preventDefault();\r\n    setIsLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      if (mode === \"login\") {\r\n        console.log(\"Login attempt with:\", email, password);\r\n        // Add your login logic here\r\n        await new Promise((resolve) => setTimeout(resolve, 1000));\r\n      } else {\r\n        console.log(\"Signup attempt with:\", name, email, password);\r\n        // Add your signup logic here\r\n        await new Promise((resolve) => setTimeout(resolve, 1000));\r\n      }\r\n\r\n      // On success, redirect to home page\r\n      // router.push('/');\r\n    } catch (err) {\r\n      setError(\r\n        err instanceof Error\r\n          ? err.message\r\n          : mode === \"login\"\r\n          ? \"Login failed\"\r\n          : \"Signup failed\"\r\n      );\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const toggleMode = () => {\r\n    setMode((prev) => (prev === \"login\" ? \"signup\" : \"login\"));\r\n    setError(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"relative flex h-screen flex-col bg-black md:items-center md:justify-center md:bg-transparent\">\r\n      <Head>\r\n        <title>{mode === \"login\" ? \"Sign In\" : \"Sign Up\"} - Netflix</title>\r\n        <meta name=\"description\" content=\"Netflix Clone Authentication\" />\r\n        <link rel=\"icon\" href=\"/favicon.ico\" />\r\n      </Head>\r\n\r\n      {/* Auth Form */}\r\n      <form\r\n        onSubmit={handleSubmit}\r\n        className=\"relative mt-24 space-y-6 rounded bg-black/75 py-8 px-6 md:mt-0 md:max-w-md md:px-14\"\r\n      >\r\n        <h1 className=\"text-3xl font-semibold\">\r\n          {mode === \"login\" ? \"Sign In\" : \"Sign Up\"}\r\n        </h1>\r\n\r\n        {error && (\r\n          <div className=\"p-3 bg-red-600 text-white rounded text-sm\">\r\n            {error}\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"space-y-4\">\r\n          {mode === \"signup\" && (\r\n            <label className=\"inline-block w-full\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Name\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n                className=\"input\"\r\n                required\r\n              />\r\n            </label>\r\n          )}\r\n\r\n          <label className=\"inline-block w-full\">\r\n            <input\r\n              type=\"email\"\r\n              placeholder=\"Email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              className=\"input\"\r\n              required\r\n            />\r\n          </label>\r\n\r\n          <label className=\"inline-block w-full\">\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              className=\"input\"\r\n              required\r\n              minLength={4}\r\n            />\r\n          </label>\r\n        </div>\r\n\r\n        <button\r\n          type=\"submit\"\r\n          disabled={isLoading}\r\n          className={`w-full rounded bg-[#e50914] py-3 font-semibold ${\r\n            isLoading ? \"opacity-60\" : \"\"\r\n          }`}\r\n        >\r\n          {isLoading\r\n            ? mode === \"login\"\r\n              ? \"Signing In...\"\r\n              : \"Signing Up...\"\r\n            : mode === \"login\"\r\n            ? \"Sign In\"\r\n            : \"Sign Up\"}\r\n        </button>\r\n\r\n        <div className=\"flex justify-between items-center text-[#737373] text-sm\">\r\n          <div className=\"flex items-center\">\r\n            <input type=\"checkbox\" id=\"remember\" className=\"mr-1\" />\r\n            <label htmlFor=\"remember\">Remember me</label>\r\n          </div>\r\n          <a href=\"#\" className=\"hover:underline\">\r\n            Need help?\r\n          </a>\r\n        </div>\r\n\r\n        <div className=\"text-[#737373]\">\r\n          {mode === \"login\" ? (\r\n            <>\r\n              New to Netflix?{\" \"}\r\n              <button\r\n                type=\"button\"\r\n                onClick={toggleMode}\r\n                className=\"text-white hover:underline\"\r\n              >\r\n                Sign up now\r\n              </button>\r\n            </>\r\n          ) : (\r\n            <>\r\n              Already have an account?{\" \"}\r\n              <button\r\n                type=\"button\"\r\n                onClick={toggleMode}\r\n                className=\"text-white hover:underline\"\r\n              >\r\n                Sign in now\r\n              </button>\r\n            </>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"text-[#737373] text-xs\">\r\n          <p>\r\n            This page is protected by Google reCAPTCHA to ensure you&apos;re not\r\n            a bot.{\" \"}\r\n            <a href=\"#\" className=\"text-blue-500 hover:underline\">\r\n              Learn more.\r\n            </a>\r\n          </p>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthPage;\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 311, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Ahmad%20Alhraki/Desktop/moonflex/node_modules/next/src/client/components/noop-head.tsx"],"sourcesContent":["export default function NoopHead() {\n  return null\n}\n"],"names":["NoopHead"],"mappings":";;;;+BAAA,WAAA;;;eAAwBA;;;AAAT,SAASA;IACtB,OAAO;AACT","ignoreList":[0],"debugId":null}}]
}