{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Ahmad%20Alhraki/Desktop/moonflex/src/app/tv-shows/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useEffect, useMemo, useState } from \"react\";\r\nimport Image from \"next/image\";\r\nimport Film from \"@/models/Film\";\r\n\r\nconst TMDB_API_KEY = \"fbd1edacbe4e94f662341a99cd3be594\";\r\nconst API_LANGUAGE = \"ar\";\r\nconst API_URL = `https://api.themoviedb.org/3/tv/popular?api_key=${TMDB_API_KEY}&language=${API_LANGUAGE}&page=1`;\r\n\r\nconst splitArray = (array: Film[], chunkSize: number): Film[][] => {\r\n  const result = [];\r\n  for (let i = 0; i < array.length; i += chunkSize) {\r\n    result.push(array.slice(i, i + chunkSize));\r\n  }\r\n  return result;\r\n};\r\n\r\nexport default function TVShowsPage() {\r\n  const [shows, setShows] = useState<Film[]>([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  console.log(shows);\r\n\r\n  useEffect(() => {\r\n    const fetchTVShows = async () => {\r\n      setIsLoading(true);\r\n      setError(null);\r\n      try {\r\n        const response = await fetch(API_URL);\r\n        if (!response.ok) throw new Error(\"حدث خطأ أثناء جلب المسلسلات.\");\r\n        const data = await response.json();\r\n        setShows(data.results || []);\r\n      } catch (err) {\r\n        console.error(err);\r\n        setError(\"فشل تحميل المسلسلات. حاول لاحقًا.\");\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchTVShows();\r\n  }, []);\r\n\r\n  // Memoize categorized movie lists\r\n  const movieLists = useMemo(() => {\r\n    if (!shows.length) return [];\r\n    return splitArray(shows, 5).slice(0, 4); // Get first 4 chunks of 5 movies each\r\n  }, [shows]);\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"h-screen flex justify-center items-center\">\r\n        <h1 className=\"text-white text-2xl\">جاري التحميل...</h1>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"h-screen flex justify-center items-center\">\r\n        <h1 className=\"text-red-500 text-xl\">{error}</h1>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"p-6 mt-36 text-white space-y-4\">\r\n      {movieLists.map((films, index) => (\r\n        <div key={index} className={index > 0 ? \"mt-24\" : \"\"}>\r\n          <FilmList films={films} />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AAFA;;;AAMA,MAAM,eAAe;AACrB,MAAM,eAAe;AACrB,MAAM,UAAU,CAAC,gDAAgD,EAAE,aAAa,UAAU,EAAE,aAAa,OAAO,CAAC;AAEjH,MAAM,aAAa,CAAC,OAAe;IACjC,MAAM,SAAS,EAAE;IACjB,IAAK,IAAI,IAAI,GAAG,IAAI,MAAM,MAAM,EAAE,KAAK,UAAW;QAChD,OAAO,IAAI,CAAC,MAAM,KAAK,CAAC,GAAG,IAAI;IACjC;IACA,OAAO;AACT;AAEe,SAAS;IACtB,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU,EAAE;IAC7C,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAClD,QAAQ,GAAG,CAAC;IAEZ,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,eAAe;YACnB,aAAa;YACb,SAAS;YACT,IAAI;gBACF,MAAM,WAAW,MAAM,MAAM;gBAC7B,IAAI,CAAC,SAAS,EAAE,EAAE,MAAM,IAAI,MAAM;gBAClC,MAAM,OAAO,MAAM,SAAS,IAAI;gBAChC,SAAS,KAAK,OAAO,IAAI,EAAE;YAC7B,EAAE,OAAO,KAAK;gBACZ,QAAQ,KAAK,CAAC;gBACd,SAAS;YACX,SAAU;gBACR,aAAa;YACf;QACF;QAEA;IACF,GAAG,EAAE;IAEL,kCAAkC;IAClC,MAAM,aAAa,CAAA,GAAA,qMAAA,CAAA,UAAO,AAAD,EAAE;QACzB,IAAI,CAAC,MAAM,MAAM,EAAE,OAAO,EAAE;QAC5B,OAAO,WAAW,OAAO,GAAG,KAAK,CAAC,GAAG,IAAI,sCAAsC;IACjF,GAAG;QAAC;KAAM;IAEV,IAAI,WAAW;QACb,qBACE,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC;gBAAG,WAAU;0BAAsB;;;;;;;;;;;IAG1C;IAEA,IAAI,OAAO;QACT,qBACE,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC;gBAAG,WAAU;0BAAwB;;;;;;;;;;;IAG5C;IAEA,qBACE,8OAAC;QAAI,WAAU;kBACZ,WAAW,GAAG,CAAC,CAAC,OAAO,sBACtB,8OAAC;gBAAgB,WAAW,QAAQ,IAAI,UAAU;0BAChD,cAAA,8OAAC;oBAAS,OAAO;;;;;;eADT;;;;;;;;;;AAMlB","debugId":null}}]
}