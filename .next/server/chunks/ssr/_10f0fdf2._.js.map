{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 24, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Ahmad%20Alhraki/Desktop/moonflex/src/components/UI/ModalClient.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/UI/ModalClient.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/UI/ModalClient.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAqS,GAClU,mEACA","debugId":null}},
    {"offset": {"line": 38, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Ahmad%20Alhraki/Desktop/moonflex/src/components/UI/ModalClient.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/UI/ModalClient.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/UI/ModalClient.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAiR,GAC9S,+CACA","debugId":null}},
    {"offset": {"line": 52, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 62, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Ahmad%20Alhraki/Desktop/moonflex/src/components/UI/Modal.tsx"],"sourcesContent":["import ModalClient from \"./ModalClient\";\r\n\r\ninterface ModalProps {\r\n  children: React.ReactNode;\r\n  open: boolean;\r\n  onClose?: () => void;\r\n}\r\n\r\nexport default function Modal(props: ModalProps) {\r\n  return <ModalClient {...props} />;\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;;;AAQe,SAAS,MAAM,KAAiB;IAC7C,qBAAO,8OAAC,uIAAA,CAAA,UAAW;QAAE,GAAG,KAAK;;;;;;AAC/B","debugId":null}},
    {"offset": {"line": 84, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Ahmad%20Alhraki/Desktop/moonflex/src/app/film/%5BfilmId%5D/page.tsx"],"sourcesContent":["import Image from \"next/image\";\r\nimport { use, useEffect, useState } from \"react\";\r\n\r\nimport { Star, Clock, CalendarDays, Play, Plus } from \"lucide-react\";\r\nimport Modal from \"@/components/UI/Modal\";\r\nimport ReactPlayer from \"react-player\";\r\nimport Film from \"@/models/Film\";\r\n\r\nexport default function FilmDetails({\r\n  params,\r\n}: {\r\n  params: Promise<{ filmId: number }>;\r\n}) {\r\n  const [modalisOpen, setModalIsOpen] = useState(false);\r\n  const { filmId } = use(params);\r\n  console.log(filmId);\r\n  const [trailerKey, setTrailerKey] = useState(null);\r\n  const [movie, setMovie] = useState<Film>();\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        const videosResponse = await fetch(\r\n          `https://api.themoviedb.org/3/movie/${filmId}/videos?api_key=fbd1edacbe4e94f662341a99cd3be594`\r\n        );\r\n        const movieDetails = await fetch(\r\n          `https://api.themoviedb.org/3/movie/${filmId}?api_key=fbd1edacbe4e94f662341a99cd3be594`\r\n        );\r\n        const videosData = await videosResponse.json();\r\n        const movieData = await movieDetails.json();\r\n        console.log(videosData);\r\n        console.log(videosData.results[0]?.key);\r\n        setTrailerKey(videosData.results[0]?.key); // Save the video key (e.g., YouTube ID)\r\n        setMovie(movieData); // Save the video key (e.g., YouTube ID)\r\n      } catch (error) {\r\n        console.error(\"Error fetching data: \", error);\r\n      }\r\n    }\r\n\r\n    fetchData();\r\n  }, [filmId]);\r\n\r\n  function toggleOpenModal() {\r\n    setModalIsOpen((prev) => !prev);\r\n  }\r\n\r\n  console.log(trailerKey);\r\n\r\n  // Mock data\r\n  const filmData = {\r\n    title: \"The Godfather\",\r\n    year: 1972,\r\n    rating: 9.2,\r\n    duration: \"2h 55m\",\r\n    genres: [\"Drama\", \"Crime\"],\r\n    description:\r\n      \"Spanning the years 1945 to 1955, a chronicle of the fictional Italian-American Corleone crime family. When organized crime family patriarch, Vito Corleone barely survives an attempt on his life, his youngest son, Michael steps in to take care of the would-be killers, launching a campaign of bloody revenge.\",\r\n    director: \"Francis Ford Coppola\",\r\n    cast: [\"Marlon Brando\", \"Al Pacino\", \"James Caan\", \"Robert Duvall\"],\r\n    poster: \"/images/film1.webp\",\r\n    backdrop: \"/images/landingPage.jpg\",\r\n  };\r\n\r\n  if (!movie) {\r\n    return <p>loading...</p>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Modal open={modalisOpen} onClose={toggleOpenModal}>\r\n        <div>\r\n          {trailerKey && (\r\n            <ReactPlayer\r\n              url={`https://www.youtube.com/watch?v=${trailerKey}`}\r\n              config={{\r\n                youtube: {\r\n                  playerVars: {\r\n                    origin: window.location.origin,\r\n                    host: \"https://www.youtube-nocookie.com\", // Privacy-enhanced domain\r\n                    modestbranding: 1, // Hides YouTube logo\r\n                    rel: 0, // Disables related videos at the end\r\n                  },\r\n                },\r\n              }}\r\n            />\r\n          )}\r\n        </div>\r\n        <div className=\"p-4 text-white\">\r\n          <h2 className=\"text-xl font-bold mb-4\">Modal Title</h2>\r\n          <p>This is your modal content. You can put anything here.</p>\r\n          <button\r\n            className=\" text-white bg-gray-500 rounded-2xl px-3 py-2 mt-5\"\r\n            onClick={toggleOpenModal}\r\n          >\r\n            Close\r\n          </button>\r\n        </div>\r\n      </Modal>\r\n      <div className=\"text-white\">\r\n        {/* Backdrop with overlay - reduced height on mobile */}\r\n        <div className=\"relative h-[40vh] sm:h-[50vh] md:h-[70vh] min-h-[300px] w-full overflow-hidden\">\r\n          <div className=\"absolute inset-0 bg-gradient-to-t from-black via-black/70 to-transparent z-10\" />\r\n          <Image\r\n            src={\r\n              movie.backdrop_path\r\n                ? `https://image.tmdb.org/t/p/w500${movie.backdrop_path}`\r\n                : \"https://via.placeholder.com/500x750?text=No+Poster\"\r\n            }\r\n            alt={filmData.title}\r\n            fill\r\n            className=\"object-cover\"\r\n            priority\r\n          />\r\n          <div className=\"container mx-auto relative z-20 h-full flex items-end pb-8 sm:pb-12 md:pb-16 px-4 -mt-28 md:-mt-20 md:px-40\">\r\n            <h1 className=\"text-3xl sm:text-4xl md:text-5xl lg:text-6xl font-bold drop-shadow-2xl text-center md:text-left w-full\">\r\n              {movie.title}{\" \"}\r\n              <span className=\"text-gray-300\">{movie.release_date}</span>\r\n            </h1>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Main content - centered and responsive */}\r\n        <div className=\"container mx-auto px-4 py-6 md:py-8 -mt-36 sm:-mt-32 md:-mt-32 relative z-30 md:px-40\">\r\n          <div className=\"flex flex-col items-center md:items-start md:flex-row gap-6 md:gap-8\">\r\n            {/* Poster - smaller on mobile */}\r\n            <div className=\"w-full max-w-[250px] sm:max-w-[300px] md:w-1/2 lg:w-1/3 flex-shrink-0 group\">\r\n              <div className=\"rounded-xl overflow-hidden shadow-2xl\">\r\n                <Image\r\n                  src={\r\n                    movie.poster_path\r\n                      ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`\r\n                      : \"https://via.placeholder.com/500x750?text=No+Poster\"\r\n                  }\r\n                  alt={filmData.title}\r\n                  width={300}\r\n                  height={450}\r\n                  className=\"w-full h-auto object-cover\"\r\n                  priority\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            {/* Details - centered text on mobile */}\r\n            <div className=\"flex-1 w-full text-center md:text-left\">\r\n              {/* Rating and metadata - stacked on mobile */}\r\n              <div className=\"flex flex-col sm:flex-row items-center justify-center md:justify-start gap-3 sm:gap-6 mb-6\">\r\n                <div className=\"flex items-center gap-2\">\r\n                  <Star className=\"text-yellow-400 w-5 h-5 fill-current\" />\r\n                  <span className=\"text-xl sm:text-2xl font-bold\">\r\n                    {filmData.rating}/10\r\n                  </span>\r\n                </div>\r\n                <div className=\"flex items-center gap-2 text-gray-300\">\r\n                  <Clock className=\"w-4 h-4\" />\r\n                  <span>{filmData.duration}</span>\r\n                </div>\r\n                <div className=\"flex items-center gap-2 text-gray-300\">\r\n                  <CalendarDays className=\"w-4 h-4\" />\r\n                  <span>{filmData.year}</span>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Genres - centered on mobile */}\r\n              <div className=\"flex flex-wrap justify-center md:justify-start gap-2 mb-6\">\r\n                {filmData.genres.map((genre, index) => (\r\n                  <span\r\n                    key={index}\r\n                    className=\"px-3 py-1 bg-red-600 rounded-full text-sm\"\r\n                  >\r\n                    {genre}\r\n                  </span>\r\n                ))}\r\n              </div>\r\n\r\n              {/* Action buttons - centered on mobile */}\r\n              <div className=\"my-8 sm:mt-10 flex flex-col sm:flex-row justify-center md:justify-start gap-3 sm:gap-4\">\r\n                <button\r\n                  onClick={toggleOpenModal}\r\n                  className=\"px-6 sm:px-8 py-2 sm:py-3 bg-red-600 hover:bg-red-700 rounded-lg font-semibold flex items-center justify-center gap-2 transition-colors\"\r\n                >\r\n                  <Play className=\"w-4 h-4 sm:w-5 sm:h-5\" /> Watch Trailer\r\n                </button>\r\n                <button className=\"px-6 sm:px-8 py-2 sm:py-3 bg-gray-800 hover:bg-gray-700 rounded-lg font-semibold flex items-center justify-center gap-2 transition-colors\">\r\n                  <Plus className=\"w-4 h-4 sm:w-5 sm:h-5\" /> My List\r\n                </button>\r\n              </div>\r\n\r\n              {/* Description */}\r\n              <p className=\"text-base sm:text-lg leading-relaxed mb-6 sm:mb-8 max-w-3xl mx-auto md:mx-0\">\r\n                {movie.overview}\r\n              </p>\r\n\r\n              {/* Director and Cast - stacked on mobile */}\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 sm:gap-6\">\r\n                <div className=\"text-center md:text-left\">\r\n                  <h3 className=\"text-lg sm:text-xl font-semibold mb-2\">\r\n                    Director\r\n                  </h3>\r\n                  <p>{filmData.director}</p>\r\n                </div>\r\n                <div className=\"text-center md:text-left\">\r\n                  <h3 className=\"text-lg sm:text-xl font-semibold mb-2\">\r\n                    Cast\r\n                  </h3>\r\n                  <div className=\"flex flex-wrap justify-center md:justify-start gap-2\">\r\n                    {filmData.cast.map((actor, index) => (\r\n                      <span\r\n                        key={index}\r\n                        className=\"px-2 sm:px-3 py-1 bg-gray-800 rounded-full text-sm\"\r\n                      >\r\n                        {actor}\r\n                      </span>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}