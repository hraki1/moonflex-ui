{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 47, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Ahmad%20Alhraki/Desktop/moonflex/src/lib/models/User.ts"],"sourcesContent":["import mongoose, { Schema, Document } from \"mongoose\";\r\n\r\nexport interface IUser extends Document {\r\n  name: string;\r\n  email: string;\r\n  password: string;\r\n  favoriteFilms: string[];\r\n}\r\n\r\nconst UserSchema = new Schema<IUser>(\r\n  {\r\n    name: { type: String, required: true },\r\n    email: { type: String, required: true, unique: true },\r\n    password: { type: String, required: true },\r\n    favoriteFilms: [{ type: String }],\r\n  },\r\n  {\r\n    timestamps: true,\r\n  }\r\n);\r\n\r\nconst User = mongoose.models.User || mongoose.model<IUser>(\"User\", UserSchema);\r\n\r\nexport default User;\r\n"],"names":[],"mappings":";;;AAAA;;AASA,MAAM,aAAa,IAAI,yGAAA,CAAA,SAAM,CAC3B;IACE,MAAM;QAAE,MAAM;QAAQ,UAAU;IAAK;IACrC,OAAO;QAAE,MAAM;QAAQ,UAAU;QAAM,QAAQ;IAAK;IACpD,UAAU;QAAE,MAAM;QAAQ,UAAU;IAAK;IACzC,eAAe;QAAC;YAAE,MAAM;QAAO;KAAE;AACnC,GACA;IACE,YAAY;AACd;AAGF,MAAM,OAAO,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,IAAI,IAAI,yGAAA,CAAA,UAAQ,CAAC,KAAK,CAAQ,QAAQ;uCAEpD","debugId":null}},
    {"offset": {"line": 82, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Ahmad%20Alhraki/Desktop/moonflex/src/lib/dbConnect.ts"],"sourcesContent":["import mongoose from \"mongoose\";\r\n\r\nconst MONGODB_URI = process.env.MONGODB_URI;\r\n\r\nconst connectToDB = async () => {\r\n  if (!MONGODB_URI) {\r\n    throw new Error(\"Missing MONGODB_URI in environment variables\");\r\n  }\r\n\r\n  // إذا تم الاتصال مسبقاً، لا تعيد الاتصال\r\n  if (mongoose.connections[0].readyState) return;\r\n\r\n  try {\r\n    await mongoose.connect(MONGODB_URI, {\r\n      dbName: \"moonflex\", // غيرها حسب اسم قاعدة بياناتك\r\n    });\r\n\r\n    console.log(\"✅ MongoDB connected\");\r\n  } catch (error) {\r\n    console.error(\"❌ MongoDB connection error:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport default connectToDB;\r\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,cAAc,QAAQ,GAAG,CAAC,WAAW;AAE3C,MAAM,cAAc;IAClB,IAAI,CAAC,aAAa;QAChB,MAAM,IAAI,MAAM;IAClB;IAEA,yCAAyC;IACzC,IAAI,yGAAA,CAAA,UAAQ,CAAC,WAAW,CAAC,EAAE,CAAC,UAAU,EAAE;IAExC,IAAI;QACF,MAAM,yGAAA,CAAA,UAAQ,CAAC,OAAO,CAAC,aAAa;YAClC,QAAQ;QACV;QAEA,QAAQ,GAAG,CAAC;IACd,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,+BAA+B;QAC7C,MAAM;IACR;AACF;uCAEe","debugId":null}},
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Ahmad%20Alhraki/Desktop/moonflex/src/lib/actions/checkAuthAction.ts"],"sourcesContent":["\"use server\";\r\n\r\nimport { cookies } from \"next/headers\";\r\nimport jwt from \"jsonwebtoken\";\r\nimport User from \"../models/User\";\r\nimport connectToDB from \"../dbConnect\";\r\n\r\nconst JWT_SECRET = process.env.JWT_SECRET as string;\r\n\r\nexport const checkAuth = async () => {\r\n  try {\r\n    await connectToDB();\r\n\r\n    // الطريقة الصحيحة لاستدعاء الكوكيز\r\n    const cookieStore = cookies();\r\n    const token = (await cookieStore).get(\"token\")?.value;\r\n\r\n    if (!token) return { user: null };\r\n\r\n    const decoded = jwt.verify(token, JWT_SECRET) as { id: string };\r\n    const user = await User.findById(decoded.id).select(\"-password\");\r\n\r\n    const plainUser = {\r\n      name: user.name,\r\n      email: user.email,\r\n    };\r\n\r\n    console.log(user);\r\n    return { user: plainUser };\r\n  } catch (error) {\r\n    console.error(\"Auth check error:\", error);\r\n    const cookieStore = cookies();\r\n    (await cookieStore).delete(\"token\");\r\n\r\n    return { user: null };\r\n  }\r\n};\r\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AACA;;;;;;;;AAEA,MAAM,aAAa,QAAQ,GAAG,CAAC,UAAU;AAElC,MAAM,YAAY;IACvB,IAAI;QACF,MAAM,CAAA,GAAA,uHAAA,CAAA,UAAW,AAAD;QAEhB,mCAAmC;QACnC,MAAM,cAAc,CAAA,GAAA,+HAAA,CAAA,UAAO,AAAD;QAC1B,MAAM,QAAQ,CAAC,MAAM,WAAW,EAAE,GAAG,CAAC,UAAU;QAEhD,IAAI,CAAC,OAAO,OAAO;YAAE,MAAM;QAAK;QAEhC,MAAM,UAAU,qIAAA,CAAA,UAAG,CAAC,MAAM,CAAC,OAAO;QAClC,MAAM,OAAO,MAAM,4HAAA,CAAA,UAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,EAAE,MAAM,CAAC;QAEpD,MAAM,YAAY;YAChB,MAAM,KAAK,IAAI;YACf,OAAO,KAAK,KAAK;QACnB;QAEA,QAAQ,GAAG,CAAC;QACZ,OAAO;YAAE,MAAM;QAAU;IAC3B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,qBAAqB;QACnC,MAAM,cAAc,CAAA,GAAA,+HAAA,CAAA,UAAO,AAAD;QAC1B,CAAC,MAAM,WAAW,EAAE,MAAM,CAAC;QAE3B,OAAO;YAAE,MAAM;QAAK;IACtB;AACF;;;IA3Ba;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 167, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Ahmad%20Alhraki/Desktop/moonflex/.next-internal/server/app/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {checkAuth as '7f8f4d58adc528e97fae4710066bd0a7b111347652'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 213, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Ahmad%20Alhraki/Desktop/moonflex/src/app/page.tsx"],"sourcesContent":["// src/app/page.tsx\r\nimport { checkAuth } from \"@/lib/actions/checkAuthAction\";\r\nimport HomeClient from \"@/components/home/HomePageClient\";\r\n\r\nexport default async function HomePage() {\r\n  const { user } = await checkAuth();\r\n\r\n  return <>\r\n  \r\n  </> ;\r\n}\r\n"],"names":[],"mappings":"AAAA,mBAAmB;;;;;AACnB;;;AAGe,eAAe;IAC5B,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,CAAA,GAAA,wIAAA,CAAA,YAAS,AAAD;IAE/B,qBAAO;AAGT","debugId":null}}]
}